# Generated by Django 4.2.23 on 2025-08-16 07:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0048_optimize_database_indexes'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeatureFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField()),
                ('flag_type', models.CharField(choices=[('BOOLEAN', 'Boolean'), ('PERCENTAGE', 'Percentage'), ('USER_LIST', 'User List'), ('TIME_BASED', 'Time Based')], db_index=True, max_length=20)),
                ('is_enabled', models.BooleanField(db_index=True, default=False)),
                ('percentage', models.IntegerField(default=0)),
                ('user_list', models.JSONField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=100, unique=True)),
                ('value', models.TextField()),
                ('config_type', models.CharField(choices=[('GENERAL', 'General'), ('PERFORMANCE', 'Performance'), ('SECURITY', 'Security'), ('CACHE', 'Cache'), ('API', 'API'), ('FEATURE', 'Feature')], db_index=True, max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['config_type', 'key'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], db_index=True, max_length=10)),
                ('log_type', models.CharField(choices=[('SYSTEM', 'System'), ('USER_ACTION', 'User Action'), ('API_CALL', 'API Call'), ('ERROR', 'Error'), ('PERFORMANCE', 'Performance'), ('SECURITY', 'Security')], db_index=True, max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('request_path', models.CharField(blank=True, max_length=500, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PAGE_VIEW', 'Page View'), ('TOOL_USAGE', 'Tool Usage'), ('API_CALL', 'API Call'), ('DATA_CREATE', 'Data Create'), ('DATA_UPDATE', 'Data Update'), ('DATA_DELETE', 'Data Delete'), ('FILE_UPLOAD', 'File Upload'), ('FILE_DOWNLOAD', 'File Download')], db_index=True, max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='toolusagelog',
            name='error_message',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='toolusagelog',
            name='execution_time',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='toolusagelog',
            name='success',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='buddyeventmessage',
            name='is_read_by',
            field=models.ManyToManyField(blank=True, related_name='legacy_buddy_read_messages', to=settings.AUTH_USER_MODEL, verbose_name='已读用户'),
        ),
        migrations.AlterField(
            model_name='toolusagelog',
            name='tool_type',
            field=models.CharField(choices=[('TEST_CASE', 'Test Case Generator'), ('QUALITY_CHECK', 'Code Quality Check'), ('PERF_TEST', 'Performance Simulator'), ('REDBOOK', 'RedBook Generator'), ('PDF_CONVERTER', 'PDF Converter'), ('FORTUNE_ANALYZER', 'Fortune Analyzer'), ('WEB_CRAWLER', 'Web Crawler'), ('SOCIAL_SUBSCRIPTION', 'Social Subscription'), ('SELF_ANALYSIS', 'Self Analysis'), ('STORYBOARD', 'Storyboard'), ('FITNESS_CENTER', 'Fitness Center'), ('TRAINING_PLAN', 'Training Plan Editor'), ('DEEPSEEK', 'DeepSeek API'), ('EMO_DIARY', 'Emo Diary'), ('CREATIVE_WRITER', 'Creative Writer'), ('MEDITATION_GUIDE', 'Meditation Guide'), ('MUSIC_HEALING', 'Music Healing'), ('HEART_LINK', 'Heart Link'), ('LIFE_DIARY', 'Life Diary'), ('DOUYIN_ANALYZER', 'Douyin Analyzer'), ('TRIPLE_AWAKENING', 'Triple Awakening'), ('DESIRE_DASHBOARD', 'Desire Dashboard'), ('VANITY_OS', 'VanityOS'), ('TAROT', 'Tarot'), ('FOOD_RANDOMIZER', 'Food Randomizer'), ('TIME_CAPSULE', 'Time Capsule'), ('GUITAR_TRAINING', 'Guitar Training'), ('FITNESS_TOOLS', 'Fitness Tools'), ('BUDDY', 'Buddy'), ('SHIPBAO', 'ShipBao')], db_index=True, max_length=20),
        ),
        migrations.AddIndex(
            model_name='socialmediasubscription',
            index=models.Index(fields=['user', 'status', 'last_check'], name='tools_socia_user_id_37bb9b_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediasubscription',
            index=models.Index(fields=['platform', 'status', 'last_check'], name='tools_socia_platfor_b4a13d_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediasubscription',
            index=models.Index(fields=['user', 'platform', 'status'], name='tools_socia_user_id_54ff61_idx'),
        ),
        migrations.AddIndex(
            model_name='toolusagelog',
            index=models.Index(fields=['success', 'created_at'], name='tools_toolu_success_07f342_idx'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='systemlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='systemconfiguration',
            index=models.Index(fields=['config_type', 'is_active'], name='tools_syste_config__5bed09_idx'),
        ),
        migrations.AddIndex(
            model_name='systemconfiguration',
            index=models.Index(fields=['key', 'is_active'], name='tools_syste_key_31cbc7_idx'),
        ),
        migrations.AddIndex(
            model_name='featureflag',
            index=models.Index(fields=['is_enabled', 'flag_type'], name='tools_featu_is_enab_2fed29_idx'),
        ),
        migrations.AddIndex(
            model_name='featureflag',
            index=models.Index(fields=['name', 'is_enabled'], name='tools_featu_name_cec41f_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'timestamp'], name='tools_usera_user_id_554eb8_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['activity_type', 'timestamp'], name='tools_usera_activit_c73bd8_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'activity_type'], name='tools_usera_user_id_1e8f4e_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['timestamp', 'level'], name='tools_syste_timesta_7ab346_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['log_type', 'timestamp'], name='tools_syste_log_typ_78f9f2_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['user', 'timestamp'], name='tools_syste_user_id_271aa3_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['level', 'log_type'], name='tools_syste_level_ec95ad_idx'),
        ),
    ]
