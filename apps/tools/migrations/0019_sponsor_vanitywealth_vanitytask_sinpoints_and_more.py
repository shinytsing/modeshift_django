# Generated by Django 4.2.23 on 2025-08-04 19:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0018_desireitem_desirefulfillment_desiredashboard'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='赞助者姓名')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='赞助金额')),
                ('message', models.TextField(blank=True, null=True, verbose_name='赞助留言')),
                ('effect', models.CharField(choices=[('golden-bling', '金色闪耀'), ('diamond-sparkle', '钻石闪烁'), ('platinum-glow', '白金光芒'), ('silver-shine', '银色光辉')], default='golden-bling', max_length=20, verbose_name='特效类型')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='是否匿名')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='赞助时间')),
            ],
            options={
                'verbose_name': '赞助者',
                'verbose_name_plural': '赞助者',
                'ordering': ['-amount', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VanityWealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('virtual_wealth', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, verbose_name='虚拟财富')),
                ('code_lines', models.IntegerField(default=0, verbose_name='代码行数')),
                ('page_views', models.IntegerField(default=0, verbose_name='网站访问量')),
                ('donations', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='赞助金额')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最后更新')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '虚拟财富',
                'verbose_name_plural': '虚拟财富',
            },
        ),
        migrations.CreateModel(
            name='VanityTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='任务标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='任务描述')),
                ('task_type', models.CharField(choices=[('code_refactor', '代码重构'), ('bug_fix', '修复Bug'), ('feature_dev', '功能开发'), ('blog_write', '写技术博客'), ('code_review', '代码审查'), ('testing', '测试编写')], max_length=20, verbose_name='任务类型')),
                ('difficulty', models.IntegerField(default=1, verbose_name='难度等级(1-10)')),
                ('reward_value', models.IntegerField(default=0, verbose_name='奖励价值')),
                ('reward_description', models.CharField(max_length=200, verbose_name='奖励描述')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '欲望任务',
                'verbose_name_plural': '欲望任务',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SinPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('code_line', '提交代码行'), ('reject_ai', '拒绝AI补全'), ('deep_work', '深度工作'), ('donation', '收到赞助'), ('manual_code', '手写代码'), ('refactor', '重构代码'), ('debug', '调试代码')], max_length=20, verbose_name='行为类型')),
                ('points_earned', models.IntegerField(verbose_name='获得积分')),
                ('metadata', models.JSONField(default=dict, verbose_name='元数据')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='获得时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '罪恶积分',
                'verbose_name_plural': '罪恶积分',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BasedDevAvatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar_image', models.ImageField(upload_to='vanity_avatars/', verbose_name='头像图片')),
                ('code_snippet', models.TextField(verbose_name='代码片段')),
                ('caption', models.CharField(max_length=500, verbose_name='配文')),
                ('is_public', models.BooleanField(default=True, verbose_name='是否公开')),
                ('likes_count', models.IntegerField(default=0, verbose_name='点赞数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '反程序员形象',
                'verbose_name_plural': '反程序员形象',
                'ordering': ['-created_at'],
            },
        ),
    ]
