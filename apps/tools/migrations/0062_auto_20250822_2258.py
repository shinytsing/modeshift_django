# Generated by Django 4.2.23 on 2025-08-22 14:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0061_auto_20250822_2244'),
    ]

    operations = [
        migrations.CreateModel(
            name='FitnessAchievementModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='模块名称')),
                ('display_name', models.CharField(max_length=100, verbose_name='显示名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='模块描述')),
                ('icon', models.CharField(default='fas fa-trophy', max_length=50, verbose_name='模块图标')),
                ('color', models.CharField(default='#FFD700', max_length=7, verbose_name='模块颜色')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序顺序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '健身成就模块',
                'verbose_name_plural': '健身成就模块',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedFitnessAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='成就名称')),
                ('description', models.TextField(verbose_name='成就描述')),
                ('level', models.CharField(choices=[('bronze', '铜牌'), ('silver', '银牌'), ('gold', '金牌'), ('platinum', '白金'), ('diamond', '钻石'), ('legendary', '传奇')], max_length=20, verbose_name='成就等级')),
                ('rarity', models.CharField(choices=[('common', '普通'), ('rare', '稀有'), ('epic', '史诗'), ('legendary', '传奇')], default='common', max_length=20, verbose_name='稀有度')),
                ('icon', models.CharField(default='fas fa-trophy', max_length=50, verbose_name='成就图标')),
                ('badge_color', models.CharField(default='#FFD700', max_length=7, verbose_name='徽章颜色')),
                ('badge_shape', models.CharField(default='circle', max_length=20, verbose_name='徽章形状')),
                ('badge_design', models.JSONField(default=dict, verbose_name='徽章设计')),
                ('unlock_condition', models.JSONField(default=dict, verbose_name='解锁条件')),
                ('unlock_formula', models.TextField(blank=True, null=True, verbose_name='解锁公式')),
                ('is_auto_unlock', models.BooleanField(default=True, verbose_name='是否自动解锁')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='是否隐藏成就')),
                ('points_reward', models.IntegerField(default=0, verbose_name='积分奖励')),
                ('special_reward', models.JSONField(default=dict, verbose_name='特殊奖励')),
                ('total_earned', models.IntegerField(default=0, verbose_name='总获得次数')),
                ('completion_rate', models.FloatField(default=0.0, verbose_name='完成率')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序顺序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.fitnessachievementmodule', verbose_name='所属模块')),
            ],
            options={
                'verbose_name': '健身成就',
                'verbose_name_plural': '健身成就',
                'ordering': ['module', 'sort_order', 'level', 'name'],
                'indexes': [
                    models.Index(fields=['module', 'is_active'], name='tools_enhan_module__2a5b7d_idx'),
                    models.Index(fields=['level', 'rarity'], name='tools_enhan_level_a1e9c5_idx'),
                ],
            },
        ),
        migrations.CreateModel(
            name='EnhancedUserFitnessAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.FloatField(default=0.0, verbose_name='完成进度')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('is_equipped', models.BooleanField(default=False, verbose_name='是否佩戴')),
                ('equipped_at', models.DateTimeField(blank=True, null=True, verbose_name='佩戴时间')),
                ('is_shared', models.BooleanField(default=False, verbose_name='是否已分享')),
                ('shared_at', models.DateTimeField(blank=True, null=True, verbose_name='分享时间')),
                ('unlock_data', models.JSONField(default=dict, verbose_name='解锁数据')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='个人备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.enhancedfitnessachievement', verbose_name='成就')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户健身成就',
                'verbose_name_plural': '用户健身成就',
                'ordering': ['-completed_at', '-created_at'],
                'indexes': [
                    models.Index(fields=['user', 'is_completed'], name='tools_enhan_user_id_3b5f0e_idx'),
                    models.Index(fields=['user', 'is_equipped'], name='tools_enhan_user_id_2c8a9d_idx'),
                    models.Index(fields=['achievement', 'is_completed'], name='tools_enhan_achieve_7e4f1a_idx'),
                ],
            },
        ),
        migrations.AlterUniqueTogether(
            name='enhanceduserfitnessachievement',
            unique_together={('user', 'achievement')},
        ),
    ]
