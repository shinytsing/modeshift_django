# Generated by Django 4.2.23 on 2025-08-11 15:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0040_checkindetail_feeling_rating_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FitnessAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='成就名称')),
                ('description', models.TextField(verbose_name='成就描述')),
                ('achievement_type', models.CharField(choices=[('streak', '连续成就'), ('workout', '训练成就'), ('social', '社交成就'), ('milestone', '里程碑成就'), ('special', '特殊成就')], max_length=20, verbose_name='成就类型')),
                ('level', models.CharField(choices=[('bronze', '铜牌'), ('silver', '银牌'), ('gold', '金牌'), ('platinum', '白金'), ('diamond', '钻石')], max_length=20, verbose_name='成就等级')),
                ('icon', models.CharField(default='fas fa-trophy', max_length=50, verbose_name='成就图标')),
                ('color', models.CharField(default='#FFD700', max_length=7, verbose_name='成就颜色')),
                ('unlock_condition', models.JSONField(default=dict, verbose_name='解锁条件')),
                ('is_auto_unlock', models.BooleanField(default=True, verbose_name='是否自动解锁')),
                ('total_earned', models.IntegerField(default=0, verbose_name='总获得次数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '健身成就',
                'verbose_name_plural': '健身成就',
                'ordering': ['level', 'achievement_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FitnessFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='关注时间')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_fitness', to=settings.AUTH_USER_MODEL, verbose_name='关注者')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers_fitness', to=settings.AUTH_USER_MODEL, verbose_name='被关注者')),
            ],
            options={
                'verbose_name': '健身关注关系',
                'verbose_name_plural': '健身关注关系',
                'ordering': ['-created_at'],
                'unique_together': {('follower', 'following')},
            },
        ),
        migrations.CreateModel(
            name='FitnessUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=100, null=True, verbose_name='健身昵称')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='fitness_avatars/', verbose_name='头像')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='个人简介')),
                ('fitness_level', models.CharField(choices=[('beginner', '初学者'), ('intermediate', '进阶者'), ('advanced', '高级者'), ('expert', '专家级')], default='beginner', max_length=20, verbose_name='健身水平')),
                ('primary_goals', models.JSONField(default=list, help_text='如：增肌、减脂、塑形等', verbose_name='主要目标')),
                ('favorite_workouts', models.JSONField(default=list, verbose_name='喜欢的运动类型')),
                ('total_workouts', models.IntegerField(default=0, verbose_name='总训练次数')),
                ('total_duration', models.IntegerField(default=0, verbose_name='总训练时长(分钟)')),
                ('current_streak', models.IntegerField(default=0, verbose_name='当前连续天数')),
                ('longest_streak', models.IntegerField(default=0, verbose_name='最长连续天数')),
                ('is_public_profile', models.BooleanField(default=True, verbose_name='是否公开档案')),
                ('allow_followers', models.BooleanField(default=True, verbose_name='允许关注')),
                ('show_achievements', models.BooleanField(default=True, verbose_name='显示成就')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '健身用户档案',
                'verbose_name_plural': '健身用户档案',
            },
        ),
        migrations.CreateModel(
            name='UserFitnessAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='获得时间')),
                ('is_shared', models.BooleanField(default=False, verbose_name='是否已分享')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.fitnessachievement', verbose_name='成就')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户健身成就',
                'verbose_name_plural': '用户健身成就',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.RemoveField(
            model_name='fitnesstrainingvideo',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='fitnesscommunitypost',
            options={'ordering': ['-created_at'], 'verbose_name': '健身社区帖子', 'verbose_name_plural': '健身社区帖子'},
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitycomment',
            name='images',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitycomment',
            name='is_approved',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitylike',
            name='like_type',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitypost',
            name='category',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitypost',
            name='images',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitypost',
            name='is_approved',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitypost',
            name='is_pinned',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitypost',
            name='videos',
        ),
        migrations.RemoveField(
            model_name='fitnesscommunitypost',
            name='visibility',
        ),
        migrations.AddField(
            model_name='fitnesscommunitycomment',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='是否已删除'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='difficulty_level',
            field=models.CharField(blank=True, choices=[('beginner', '初级'), ('intermediate', '中级'), ('advanced', '高级'), ('expert', '专家级')], max_length=20, null=True, verbose_name='难度等级'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='是否已删除'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='is_public',
            field=models.BooleanField(default=True, verbose_name='是否公开'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='training_parts',
            field=models.JSONField(default=list, verbose_name='训练部位'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='training_plan_data',
            field=models.JSONField(blank=True, default=dict, verbose_name='训练计划数据'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='video_duration',
            field=models.IntegerField(blank=True, null=True, verbose_name='视频时长(秒)'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='video_thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='fitness_videos/thumbnails/', verbose_name='视频缩略图'),
        ),
        migrations.AddField(
            model_name='fitnesscommunitypost',
            name='video_url',
            field=models.URLField(blank=True, null=True, verbose_name='视频链接'),
        ),
        migrations.AddField(
            model_name='useronlinestatus',
            name='is_online',
            field=models.BooleanField(default=False, verbose_name='是否在线'),
        ),
        migrations.AddField(
            model_name='useronlinestatus',
            name='match_number',
            field=models.CharField(blank=True, max_length=4, null=True, verbose_name='匹配数字'),
        ),
        migrations.AlterField(
            model_name='chatmessage',
            name='message_type',
            field=models.CharField(choices=[('text', '文本'), ('image', '图片'), ('file', '文件'), ('emoji', '表情'), ('video', '视频'), ('audio', '语音')], default='text', max_length=10, verbose_name='消息类型'),
        ),
        migrations.AlterField(
            model_name='checkindetail',
            name='training_parts',
            field=models.JSONField(default=list, help_text='如：胸、背、腿等', verbose_name='训练部位'),
        ),
        migrations.AlterField(
            model_name='fitnesscommunitycomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='评论用户'),
        ),
        migrations.AlterField(
            model_name='fitnesscommunitylike',
            name='comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='tools.fitnesscommunitycomment', verbose_name='评论'),
        ),
        migrations.AlterField(
            model_name='fitnesscommunitylike',
            name='post',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='tools.fitnesscommunitypost', verbose_name='帖子'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='fitnesscommunitylike',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='点赞用户'),
        ),
        migrations.AlterField(
            model_name='fitnesscommunitypost',
            name='post_type',
            field=models.CharField(choices=[('checkin', '打卡分享'), ('plan', '训练计划'), ('video', '训练视频'), ('achievement', '成就分享'), ('motivation', '励志分享'), ('question', '问题讨论')], max_length=20, verbose_name='帖子类型'),
        ),
        migrations.AlterField(
            model_name='fitnesscommunitypost',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='发布用户'),
        ),
        migrations.DeleteModel(
            name='FitnessTrainingPlan',
        ),
        migrations.DeleteModel(
            name='FitnessTrainingVideo',
        ),
    ]
