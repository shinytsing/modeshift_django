# Generated by Django 4.2.23 on 2025-08-04 19:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0016_alter_lifediaryentry_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkoutDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_workouts', models.IntegerField(default=0, verbose_name='总训练次数')),
                ('total_duration', models.IntegerField(default=0, verbose_name='总训练时长(分钟)')),
                ('total_calories', models.IntegerField(default=0, verbose_name='总消耗卡路里')),
                ('current_streak', models.IntegerField(default=0, verbose_name='当前连续天数')),
                ('longest_streak', models.IntegerField(default=0, verbose_name='最长连续天数')),
                ('favorite_workout', models.CharField(blank=True, max_length=50, null=True, verbose_name='最爱训练')),
                ('weekly_stats', models.JSONField(default=dict, verbose_name='周统计')),
                ('monthly_stats', models.JSONField(default=dict, verbose_name='月统计')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最后更新')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '训练仪表盘',
                'verbose_name_plural': '训练仪表盘',
            },
        ),
        migrations.CreateModel(
            name='FitnessWorkoutSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_type', models.CharField(choices=[('strength', '力量训练'), ('cardio', '有氧运动'), ('flexibility', '柔韧性训练'), ('balance', '平衡训练'), ('mixed', '混合训练')], max_length=20, verbose_name='训练类型')),
                ('intensity', models.CharField(choices=[('light', '轻度'), ('moderate', '中度'), ('intense', '高强度'), ('extreme', '极限')], max_length=20, verbose_name='强度等级')),
                ('duration_minutes', models.IntegerField(verbose_name='训练时长(分钟)')),
                ('calories_burned', models.IntegerField(default=0, verbose_name='消耗卡路里')),
                ('heart_rate_avg', models.IntegerField(default=0, verbose_name='平均心率')),
                ('heart_rate_max', models.IntegerField(default=0, verbose_name='最大心率')),
                ('exercises', models.JSONField(default=list, verbose_name='训练动作')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='训练笔记')),
                ('audio_recording_url', models.URLField(blank=True, null=True, verbose_name='喘息录音')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='训练时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '健身训练',
                'verbose_name_plural': '健身训练',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExhaustionProof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proof_type', models.CharField(choices=[('fitness', '健身力竭'), ('coding', '编程力竭'), ('mental', '精神力竭'), ('mixed', '混合力竭')], max_length=20, verbose_name='证明类型')),
                ('title', models.CharField(max_length=200, verbose_name='证明标题')),
                ('description', models.TextField(verbose_name='证明描述')),
                ('heart_rate_data', models.JSONField(default=dict, verbose_name='心率数据')),
                ('audio_recording_url', models.URLField(blank=True, null=True, verbose_name='录音文件')),
                ('nft_metadata', models.JSONField(default=dict, verbose_name='NFT元数据')),
                ('nft_token_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='NFT代币ID')),
                ('blockchain_tx_hash', models.CharField(blank=True, max_length=200, null=True, verbose_name='区块链交易哈希')),
                ('is_minted', models.BooleanField(default=False, verbose_name='是否已铸造')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '力竭证明',
                'verbose_name_plural': '力竭证明',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CoPilotCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collaboration_type', models.CharField(choices=[('skeleton', '骨架代码'), ('muscle', '肌肉代码'), ('nervous', '神经系统')], max_length=20, verbose_name='协作类型')),
                ('original_code', models.TextField(verbose_name='原始代码')),
                ('ai_generated_code', models.TextField(verbose_name='AI生成代码')),
                ('final_code', models.TextField(verbose_name='最终代码')),
                ('project_name', models.CharField(max_length=200, verbose_name='项目名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='协作描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'AI协作声明',
                'verbose_name_plural': 'AI协作声明',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CodeWorkoutSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_type', models.CharField(choices=[('pull_up', '引体向上(原生JS)'), ('plank', '平板支撑(拒绝AI)'), ('squat', '深蹲(重构函数)'), ('push_up', '俯卧撑(手写算法)'), ('burpee', '波比跳(调试代码)')], max_length=20, verbose_name='训练类型')),
                ('duration_seconds', models.IntegerField(verbose_name='训练时长(秒)')),
                ('difficulty_level', models.IntegerField(default=1, verbose_name='难度等级')),
                ('code_snippet', models.TextField(blank=True, null=True, verbose_name='代码片段')),
                ('ai_rejection_count', models.IntegerField(default=0, verbose_name='拒绝AI次数')),
                ('manual_code_lines', models.IntegerField(default=0, verbose_name='手写代码行数')),
                ('refactored_functions', models.IntegerField(default=0, verbose_name='重构函数数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='训练时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '代码训练',
                'verbose_name_plural': '代码训练',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIDependencyMeter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_code_lines', models.IntegerField(default=0, verbose_name='总代码行数')),
                ('ai_generated_lines', models.IntegerField(default=0, verbose_name='AI生成代码行数')),
                ('manual_code_lines', models.IntegerField(default=0, verbose_name='手写代码行数')),
                ('ai_rejection_count', models.IntegerField(default=0, verbose_name='拒绝AI次数')),
                ('dependency_score', models.FloatField(default=0.0, verbose_name='依赖度评分')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最后更新')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'AI依赖度仪表',
                'verbose_name_plural': 'AI依赖度仪表',
            },
        ),
        migrations.CreateModel(
            name='PainCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_type', models.CharField(choices=[('exhaustion', '力竭币'), ('rejection', '拒绝币'), ('manual', '手写币'), ('breakthrough', '突破币')], max_length=20, verbose_name='货币类型')),
                ('amount', models.IntegerField(default=0, verbose_name='数量')),
                ('total_earned', models.IntegerField(default=0, verbose_name='总获得')),
                ('total_spent', models.IntegerField(default=0, verbose_name='总消费')),
                ('last_earned', models.DateTimeField(auto_now=True, verbose_name='最后获得时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '痛苦货币',
                'verbose_name_plural': '痛苦货币',
                'unique_together': {('user', 'currency_type')},
            },
        ),
        migrations.CreateModel(
            name='DailyWorkoutChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge_type', models.CharField(choices=[('fitness', '健身挑战'), ('coding', '编程挑战'), ('mixed', '混合挑战')], max_length=20, verbose_name='挑战类型')),
                ('date', models.DateField(auto_now_add=True, verbose_name='挑战日期')),
                ('tasks', models.JSONField(default=list, verbose_name='挑战任务')),
                ('completed_tasks', models.JSONField(default=list, verbose_name='完成任务')),
                ('total_score', models.IntegerField(default=0, verbose_name='总得分')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('reward_unlocked', models.BooleanField(default=False, verbose_name='是否解锁奖励')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '每日训练挑战',
                'verbose_name_plural': '每日训练挑战',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
