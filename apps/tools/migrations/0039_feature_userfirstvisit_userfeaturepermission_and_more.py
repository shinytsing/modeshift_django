# Generated by Django 4.2.23 on 2025-08-09 11:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0038_add_error_message_to_douyin_analysis'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='功能名称')),
                ('description', models.TextField(verbose_name='功能描述')),
                ('feature_type', models.CharField(choices=[('tool', '工具功能'), ('mode', '模式功能'), ('page', '页面功能'), ('api', 'API功能')], max_length=20, verbose_name='功能类型')),
                ('category', models.CharField(choices=[('work', '工作效率'), ('life', '生活娱乐'), ('health', '健康管理'), ('social', '社交互动'), ('creative', '创作工具'), ('analysis', '数据分析'), ('entertainment', '娱乐休闲'), ('learning', '学习成长'), ('other', '其他')], max_length=20, verbose_name='功能分类')),
                ('url_name', models.CharField(help_text='Django URL name', max_length=100, verbose_name='URL名称')),
                ('icon_class', models.CharField(help_text='Font Awesome图标类名', max_length=100, verbose_name='图标类名')),
                ('icon_color', models.CharField(default='#007bff', max_length=20, verbose_name='图标颜色')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_public', models.BooleanField(default=True, verbose_name='是否公开')),
                ('require_login', models.BooleanField(default=True, verbose_name='是否需要登录')),
                ('require_membership', models.CharField(blank=True, choices=[('', '无要求'), ('basic', '基础会员'), ('premium', '高级会员'), ('vip', 'VIP会员')], max_length=20, verbose_name='会员要求')),
                ('recommendation_weight', models.IntegerField(default=50, help_text='1-100，数值越高推荐概率越大', verbose_name='推荐权重')),
                ('popularity_score', models.IntegerField(default=0, help_text='基于使用量自动计算', verbose_name='受欢迎程度')),
                ('total_usage_count', models.IntegerField(default=0, verbose_name='总使用次数')),
                ('monthly_usage_count', models.IntegerField(default=0, verbose_name='月使用次数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '功能',
                'verbose_name_plural': '功能管理',
                'ordering': ['-recommendation_weight', '-popularity_score', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserFirstVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_visit_time', models.DateTimeField(auto_now_add=True, verbose_name='首次访问时间')),
                ('has_seen_recommendation', models.BooleanField(default=False, verbose_name='是否已看过推荐')),
                ('recommendation_shown_count', models.IntegerField(default=0, verbose_name='推荐展示次数')),
                ('last_recommendation_time', models.DateTimeField(blank=True, null=True, verbose_name='最后推荐时间')),
                ('total_login_count', models.IntegerField(default=1, verbose_name='总登录次数')),
                ('total_feature_usage', models.IntegerField(default=0, verbose_name='总功能使用次数')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户首次访问记录',
                'verbose_name_plural': '用户首次访问记录',
            },
        ),
        migrations.CreateModel(
            name='UserFeaturePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(default=True, verbose_name='是否可见')),
                ('is_allowed', models.BooleanField(default=True, verbose_name='是否允许使用')),
                ('custom_weight', models.IntegerField(blank=True, help_text='为特定用户设置的推荐权重，为空则使用功能默认权重', null=True, verbose_name='自定义推荐权重')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_permissions', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.feature', verbose_name='功能')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户功能权限',
                'verbose_name_plural': '用户功能权限',
            },
        ),
        migrations.CreateModel(
            name='FeatureRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='用于标识同一次推荐会话', max_length=100, verbose_name='会话ID')),
                ('action', models.CharField(choices=[('shown', '已展示'), ('clicked', '已点击'), ('dismissed', '已忽略'), ('not_interested', '不感兴趣')], max_length=20, verbose_name='用户行为')),
                ('recommendation_reason', models.CharField(blank=True, max_length=200, verbose_name='推荐理由')),
                ('user_mode_preference', models.CharField(blank=True, max_length=20, verbose_name='用户模式偏好')),
                ('recommendation_algorithm', models.CharField(default='random', max_length=50, verbose_name='推荐算法')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='推荐时间')),
                ('action_time', models.DateTimeField(blank=True, null=True, verbose_name='行为时间')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, verbose_name='用户代理')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.feature', verbose_name='推荐功能')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '功能推荐记录',
                'verbose_name_plural': '功能推荐记录',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['is_active', 'is_public'], name='tools_featu_is_acti_381061_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['category', 'feature_type'], name='tools_featu_categor_49d504_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['recommendation_weight', 'popularity_score'], name='tools_featu_recomme_f8a776_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeaturepermission',
            index=models.Index(fields=['user', 'is_visible', 'is_allowed'], name='tools_userf_user_id_4bb27e_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeaturepermission',
            index=models.Index(fields=['feature', 'is_visible'], name='tools_userf_feature_28e22a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userfeaturepermission',
            unique_together={('user', 'feature')},
        ),
        migrations.AddIndex(
            model_name='featurerecommendation',
            index=models.Index(fields=['user', 'created_at'], name='tools_featu_user_id_97b939_idx'),
        ),
        migrations.AddIndex(
            model_name='featurerecommendation',
            index=models.Index(fields=['feature', 'action'], name='tools_featu_feature_3ebdf8_idx'),
        ),
        migrations.AddIndex(
            model_name='featurerecommendation',
            index=models.Index(fields=['session_id'], name='tools_featu_session_bf2d7a_idx'),
        ),
        migrations.AddIndex(
            model_name='featurerecommendation',
            index=models.Index(fields=['action', 'created_at'], name='tools_featu_action_632512_idx'),
        ),
    ]
