# Generated by Django 4.2.23 on 2025-08-15 03:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tools', '0043_fooditem_calories_fooditem_carbohydrates_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DietPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='开始日期')),
                ('end_date', models.DateField(verbose_name='结束日期')),
                ('daily_calories', models.IntegerField(verbose_name='每日总热量')),
                ('protein_goal', models.IntegerField(verbose_name='蛋白质目标(g)')),
                ('carbs_goal', models.IntegerField(verbose_name='碳水目标(g)')),
                ('fat_goal', models.IntegerField(verbose_name='脂肪目标(g)')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '饮食计划',
                'verbose_name_plural': '饮食计划',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FoodDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='食物名称')),
                ('category', models.CharField(max_length=100, verbose_name='食物类别')),
                ('calories_per_100g', models.FloatField(verbose_name='每100g热量')),
                ('protein_per_100g', models.FloatField(verbose_name='每100g蛋白质')),
                ('carbs_per_100g', models.FloatField(verbose_name='每100g碳水')),
                ('fat_per_100g', models.FloatField(verbose_name='每100g脂肪')),
                ('fiber_per_100g', models.FloatField(default=0, verbose_name='每100g纤维')),
                ('is_vegetarian', models.BooleanField(default=False, verbose_name='是否素食')),
                ('is_gluten_free', models.BooleanField(default=False, verbose_name='是否无麸质')),
                ('allergens', models.JSONField(default=list, verbose_name='过敏原')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '食物数据库',
                'verbose_name_plural': '食物数据库',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', '早餐'), ('lunch', '午餐'), ('dinner', '晚餐'), ('snack', '加餐'), ('pre_workout', '训练前'), ('post_workout', '训练后')], max_length=20, verbose_name='餐食类型')),
                ('day_of_week', models.IntegerField(verbose_name='星期几(1-7)')),
                ('description', models.TextField(verbose_name='餐食描述')),
                ('ingredients', models.JSONField(default=list, verbose_name='食材清单')),
                ('calories', models.IntegerField(verbose_name='热量')),
                ('protein', models.FloatField(verbose_name='蛋白质(g)')),
                ('carbs', models.FloatField(verbose_name='碳水(g)')),
                ('fat', models.FloatField(verbose_name='脂肪(g)')),
                ('ideal_time', models.TimeField(blank=True, null=True, verbose_name='理想用餐时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.dietplan', verbose_name='饮食计划')),
            ],
            options={
                'verbose_name': '餐食',
                'verbose_name_plural': '餐食',
                'ordering': ['day_of_week', 'meal_type'],
            },
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='allow_followers',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='avatar',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='bio',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='current_streak',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='favorite_workouts',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='fitness_level',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='is_public_profile',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='longest_streak',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='nickname',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='primary_goals',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='show_achievements',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='total_duration',
        ),
        migrations.RemoveField(
            model_name='fitnessuserprofile',
            name='total_workouts',
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='activity_level',
            field=models.CharField(choices=[('sedentary', '久坐'), ('light', '轻度活动'), ('moderate', '中度活动'), ('high', '重度活动')], default='moderate', max_length=20, verbose_name='日常活动量'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='age',
            field=models.IntegerField(default=25, verbose_name='年龄'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='allergies',
            field=models.JSONField(default=list, verbose_name='过敏食物'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='bmr',
            field=models.FloatField(blank=True, null=True, verbose_name='基础代谢率'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='body_fat_percentage',
            field=models.FloatField(blank=True, null=True, verbose_name='体脂率(%)'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='dietary_preferences',
            field=models.JSONField(default=list, verbose_name='饮食偏好'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='gender',
            field=models.CharField(choices=[('male', '男性'), ('female', '女性')], default='male', max_length=10, verbose_name='性别'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='goal',
            field=models.CharField(choices=[('lose_weight', '减脂'), ('gain_muscle', '增肌'), ('maintain', '维持体重')], default='maintain', max_length=20, verbose_name='健身目标'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='height',
            field=models.FloatField(default=170.0, verbose_name='身高(cm)'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='intensity',
            field=models.CharField(choices=[('conservative', '保守型'), ('balanced', '均衡型'), ('aggressive', '激进型')], default='balanced', max_length=20, verbose_name='目标强度'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='training_days_per_week',
            field=models.IntegerField(default=3, verbose_name='每周训练天数'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='training_duration',
            field=models.IntegerField(default=60, verbose_name='训练时长(分钟)'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='training_intensity',
            field=models.CharField(default='moderate', max_length=20, verbose_name='训练强度'),
        ),
        migrations.AddField(
            model_name='fitnessuserprofile',
            name='weight',
            field=models.FloatField(default=70.0, verbose_name='当前体重(kg)'),
        ),
        migrations.CreateModel(
            name='WeightTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='体重(kg)')),
                ('body_fat_percentage', models.FloatField(blank=True, null=True, verbose_name='体脂率(%)')),
                ('measurement_date', models.DateField(verbose_name='测量日期')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '体重追踪',
                'verbose_name_plural': '体重追踪',
                'ordering': ['-measurement_date'],
            },
        ),
        migrations.CreateModel(
            name='NutritionReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('meal_time', '用餐时间'), ('pre_workout', '训练前加餐'), ('post_workout', '训练后补充'), ('hydration', '水分补充'), ('meal_log', '餐食记录'), ('weight_track', '体重记录')], max_length=20, verbose_name='提醒类型')),
                ('message', models.TextField(verbose_name='提醒内容')),
                ('trigger_time', models.TimeField(blank=True, null=True, verbose_name='触发时间')),
                ('trigger_days', models.JSONField(default=list, verbose_name='触发日期(1-7)')),
                ('is_recurring', models.BooleanField(default=True, verbose_name='是否重复')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('last_sent', models.DateTimeField(blank=True, null=True, verbose_name='最后发送时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '营养提醒',
                'verbose_name_plural': '营养提醒',
                'ordering': ['trigger_time'],
            },
        ),
        migrations.CreateModel(
            name='MealLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumed_date', models.DateField(verbose_name='消费日期')),
                ('consumed_time', models.TimeField(verbose_name='消费时间')),
                ('actual_calories', models.IntegerField(blank=True, null=True, verbose_name='实际热量')),
                ('actual_protein', models.FloatField(blank=True, null=True, verbose_name='实际蛋白质')),
                ('actual_carbs', models.FloatField(blank=True, null=True, verbose_name='实际碳水')),
                ('actual_fat', models.FloatField(blank=True, null=True, verbose_name='实际脂肪')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tools.meal', verbose_name='计划餐食')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '餐食记录',
                'verbose_name_plural': '餐食记录',
                'ordering': ['-consumed_date', '-consumed_time'],
            },
        ),
    ]
